# .github/workflows/build.yml

name: Build C++ DLL Plugin

# 工作流触发器
on:
  # 当有代码推送到 main 分支时触发
  push:
    branches: [ "main" ]
  # 当有拉取请求指向 main 分支时触发
  pull_request:
    branches: [ "main" ]

  # 允许您从 GitHub Actions 页面手动触发此工作流
  workflow_dispatch:

jobs:
  build:
    # 指定运行此作业的虚拟机环境
    runs-on: windows-latest

    steps:
    # 第 1 步：签出代码
    # 此步骤会下载您的仓库代码到运行器中
    - name: Checkout repository
      uses: actions/checkout@v4

    # 第 2 步：设置 MSBuild 环境
    # 此步骤会找到 MSBuild.exe 并将其添加到 PATH，以便后续步骤可以直接调用
    - name: Set up MSBuild
      uses: microsoft/setup-msbuild@v2

    # 第 3 步：构建解决方案
    # 此步骤调用 MSBuild 来编译您的项目。
    # IMPORTANT: 将 'YourPluginName.sln' 替换为您自己的解决方案文件名。
    - name: Build the solution
      run: msbuild YourPluginName.sln -p:Configuration=Release -p:Platform=x64
      
    # 第 4 步：上传构建产物
    # 此步骤会将编译生成的 DLL 文件打包上传，以便您可以在工作流运行结束后下载。
    # IMPORTANT: 
    #   1. 将 'cpu-usage-plugin' 改为您希望的产物名称。
    #   2. 将 'x64/Release/YourPluginName.dll' 替换为实际的输出路径和 DLL 文件名。
    #      这个路径取决于您在 Visual Studio 项目中的输出目录设置。
    - name: Upload DLL artifact
      uses: actions/upload-artifact@v4
      with:
        name: cpu-usage-plugin
        path: x64/Release/YourPluginName.dll
